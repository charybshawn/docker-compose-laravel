version: '3'

networks:
  internal:
    external: false
  external:
    external: true
    
#Volumes
volumes:
  db_data:
    driver: local

services:
  site:
    build:
      context: ./dockerfiles
      dockerfile: nginx.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    container_name: nginx
    labels:
        - traefik.http.routers.webserver.rule=Host(`${DOMAIN}`)
        - traefik.http.routers.webserver.tls=true
        - traefik.http.routers.webserver.tls.certresolver=lets-encrypt
        - traefik.port=80
        - traefik.docker.network=traefik
    volumes:
      - ./src:/var/www/html:delegated
      
    depends_on:
      - php
      #- redis
      - db
      #- mailhog
    networks:
      - external
      - internal

  db:
    image: mysql:8.0
    container_name: db
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: hmo671FSD!
      MYSQL_DATABASE: sfbackend
      MYSQL_USER: thor
      MYSQL_PASSWORD: kngfqp57
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - db_data:/var/lib/mysql/
    networks:
      - internal

  php:
    build:
      context: ./dockerfiles
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    container_name: php
    volumes:
      - ./src:/var/www/html:delegated
    networks:
      - internal

  # redis:
  #   image: redis:alpine
  #   container_name: redis
  #   restart: unless-stopped
  #   ports:
  #     - 6379:6379
  #   networks:
  #     - laravel

  composer:
    build:
      context: ./dockerfiles
      dockerfile: composer.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    container_name: composer
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    depends_on:
      - php
    user: laravel
    entrypoint: ['composer', '--ignore-platform-reqs']
    networks:
      - internal

  npm:
    image: node:15.3
    container_name: npm
    volumes:
      - ./src:/var/www/html
    ports:
      - 3000:3000
      - 3001:3001
    working_dir: /var/www/html
    entrypoint: ['npm']
    networks:
      - internal

  artisan:
    build:
      context: ./dockerfiles
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    container_name: artisan
    volumes:
      - ./src:/var/www/html:delegated
    depends_on:
      - db
    working_dir: /var/www/html
    entrypoint: ['php', '/var/www/html/artisan']
    networks:
      - internal

  mailhog:
    image: mailhog/mailhog:latest
    container_name: mailhog
    ports:
      - 1025:1025
      - 8025:8025
    networks:
      - internal
